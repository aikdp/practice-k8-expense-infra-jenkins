pipeline{
    agent any
    options{
        disableConcurrentBuilds() 
        // retry(2)    //it will retry 2 times, if pipeline failure
        timeout(time: 30, unit: 'MINUTES') //pipeline will stop/abort when specified time period
        ansiColor('xterm')
    }
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Run on specific action')
    }
    environment{
        TF_VAR_db_password = "ExpenseApp1"
    }
    stages{
        stage("Terraform Init and Plan"){
            // when {
            //     expression {params.ACTION == 'apply'}
            // }
            steps{
                withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                    sh '''
                        cd 04-rds

                        terraform init -reconfigure
                        
                        terraform plan -out=tfplan -var-file="mysql.tfvars"
                    '''
                }
            }          
        }
        stage("Terraform Apply and Destroy"){
            steps{
                withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                    sh """
                        cd 04-rds

                        if [ ${params.ACTION} == 'apply' ]
                        then
                            terraform apply -auto-approve -var-file="mysql.tfvars" tfplan
                        elif [ ${params.ACTION} == 'destroy' ]
                        then
                            terraform destroy -auto-approve -var-file="mysql.tfvars"
                    """
                }
            }
        }
    }
    //post build section
    post{
        always{
            echo "I always run when pipeline running"
            deleteDir()    //Cleans up workspace after every build.
        }
        failure{
            echo "Pipeline is FAILED"
        }
        success {
            echo "Pipeline is Success"
        }
        regression {
            echo "It will execute if Pipeline status is failure, unstable, or aborted and the previous run was successful"
        }
    }
}

