pipeline{
    agent any
    options{
        disableConcurrentBuilds() 
        // retry(2)    //it will retry 2 times, if pipeline failure
        timeout(time: 30, unit: 'MINUTES') //pipeline will stop/abort when specified time period
        ansiColor('xterm')
    }
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Run on specific action')
    }
    stages{
        stage("Terraform Init and Plan"){
            // when {
            //         expression ${params.ACTION} == 'apply'
            //     }
            steps{
                withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                    sh """
                        cd 09-cdn

                        terraform init -reconfigure
                        
                        terraform plan -out=tfplan
                    """
                }
            }          
        }
        stage("Terraform Apply and Destroy"){
            steps{
                withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                    sh """
                        cd 09-cdn
                        
                        if [ ${params.ACTION} == 'apply' ]
                            then
                                terraform apply -auto-approve tfplan
                        elif [ ${params.ACTION} == 'destroy' ]
                            then
                                terraform destroy -auto-approve
                        fi
                    """
                }
            }
        }
        // parallel stage
        stage("Parallel Stage Destroy"){
            when {
                expression {params.ACTION == 'destroy'}
            }
            parallel {
                stage("ECR"){    
                    steps{
                        build job: '08-ecr', parameters: [[$class: 'StringParameterValue', name: 'ACTION', value: 'destroy']], wait: false // false means, VPC is succesfull, even if SG fails. TRUE, if SG fails then VPC also failed
                    }
                }
                stage("Application LoadBalancer"){   
                    steps{ 
                        build job: '07-web-alb', parameters: [[$class: 'StringParameterValue', name: 'ACTION', value: 'destroy']], wait: true // false means, VPC is succesfull, even if SG fails. TRUE, if SG fails then VPC also failed
                    }
                }
                stage("EKS"){    
                    steps{
                        build job: '05-eks', parameters: [[$class: 'StringParameterValue', name: 'ACTION', value: 'destroy']], wait: true // false means, VPC is succesfull, even if SG fails. TRUE, if SG fails then VPC also failed
                    }
                }
                stage("RDS"){    
                    steps{
                        build job: '04-rds', parameters: [[$class: 'StringParameterValue', name: 'ACTION', value: 'destroy']], wait: false // false means, VPC is succesfull, even if SG fails. TRUE, if SG fails then VPC also failed
                    }
                }
                stage("BASTION"){  
                    steps {   
                        build job: '03-bastion', parameters: [[$class: 'StringParameterValue', name: 'ACTION', value: 'destroy']], wait: false // false means, VPC is succesfull, even if SG fails. TRUE, if SG fails then VPC also failed
                    }
                }
            }
        }
        // Sequencial Stage
        stage ("Sequence Stage for ACM, SG and VPC destroy"){
            when {
                expression {params.ACTION == 'destroy'}
            }
            stages {
                stage("ACM"){    
                    steps { 
                        build job: '06-acm', parameters: [[$class: 'StringParameterValue', name: 'ACTION', value: 'destroy']], wait: false // false means, VPC is succesfull, even if SG fails. TRUE, if SG fails then VPC also failed
                    }
                }
                stage("Security Group"){    
                    steps{
                        build job: '02-sg', parameters: [[$class: 'StringParameterValue', name: 'ACTION', value: 'destroy']], wait: true // false means, VPC is succesfull, even if SG fails. TRUE, if SG fails then VPC also failed
                    }
                }
                stage("VPC"){    
                    steps{
                        build job: '01-cpv', parameters: [[$class: 'StringParameterValue', name: 'ACTION', value: 'destroy']], wait: false // false means, VPC is succesfull, even if SG fails. TRUE, if SG fails then VPC also failed
                    }
                }
            }
        }
    }
    //post build section
    post{
        always{
            echo "I always run when pipeline running"
            deleteDir()    //Cleans up workspace after every build.
        }
        failure{
            echo "Pipeline is FAILED"
        }
        success {
            echo "Pipeline is Success"
        }
        regression {
            echo "It will execute when Pipeline status is failure, unstable, or aborted and the previous run was successful"
        }
    }
}